<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gravity = 0.1;
gravity_direction = 270;

fire = 0;
damage = 0;
headShot = false;
move = 0; //counter for moving animation

bloodSystem = part_system_create();
bloodType = part_type_create();

part_type_shape(bloodType,pt_shape_smoke);
part_type_scale(bloodType,0.4,0.1);
part_type_alpha2(bloodType,1,0);
part_type_life(bloodType,15,15);
part_type_colour1(bloodType,red);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fire &gt;= 0) {
    if(obj_player.x &lt; x){
        if(place_free(x-moveSpeed,y)){
            hspeed = -moveSpeed;
        }
    }
    else{
        if(place_free(x+moveSpeed,y)){
            hspeed = moveSpeed;
        }
    }
    image_xscale = sign(hspeed);
}
else {
    hspeed = 0;
}
if (fire &lt; 1) {fire++;}
if(enemyHealth &lt;= 0){
    if (irandom(4) == 0) {
        instance_create(x,y,obj_ammo);
    }
    instance_destroy();
    effect_create_above(ef_firework,x,y,0.5,red);
    //global.kills ++;
    //if(headShot) {global.hs_kills ++;}
}
headShot = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(other.ammoType == 4){
    with(other) {instance_destroy();}
    with(instance_create(x,y,obj_grenade)){
        fuse = 0;
        blastRadius = 60;
        damage = global.weapon[global.currentWeapon,2];
    }
}
else{*/
if(!checkPierceList(id)) {
    if (ds_list_size(other.pierceList) &lt;= other.maxPierce) {
        var dmg_ind = instance_create(x,y,obj_dmg_ind);
        other.damage = round(other.damage/(ds_list_size(other.pierceList)+1));
        if(other.y &lt; y-4 &amp;&amp; other.y &gt; y-14){
            damage = round(other.damage*2.5);
            enemyHealth -= damage;
            headShot = true;
            
            dmg_ind.color = red;
        }
        else{
            damage = round(other.damage);
            enemyHealth -= damage;
            dmg_ind.color = white;
        }
        dmg_ind.words = damage;
        dmg_ind.hspeed = random_range(-1,1);
        dmg_ind.vspeed = -3;
        score += damage;
        if(enemyHealth &lt;= 0) {
            createLimbs(0,-other.speed/4,direction+irandom(45)*image_xscale);
        }
        part_type_orientation(bloodType,0,0,0,0,true);
        part_type_direction(bloodType,other.direction,other.direction,0,0);
        part_type_speed(bloodType,1,2,0,0);
        part_particles_create(bloodSystem,other.x,other.y,bloodType,2);
        
        
        if (ds_list_size(other.pierceList) == other.maxPierce) {
            with(other) {instance_destroy();}
        }
        else {
            ds_list_add(other.pierceList,id);
            
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ground">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,12);
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
